@model BookishWebApplication.Models.View.SearchBooksViewModel

@{
    ViewData["Title"] = "Search";
}

<div class="text-center">
    <form class="input-group mb-3" action="search">
        <input name="searchString" id="searchString" type="text" class="form-control" placeholder="Enter book title to search" aria-label="Enter book title to search" aria-describedby="basic-addon2">
        <div class="input-group-append">
            <input class="btn btn-outline-secondary" type="submit" value="Search"/>
        </div>
    </form>
    
    <h1 class="display-4">Book Search</h1>
    
    @{
        if (string.IsNullOrEmpty(Model.SearchString))
        {
            <p>@Model.SearchString</p>
            <p>Please search for a book</p>
        }
        else if (!Model.Books.Any())
        {
            <p>No books with title @Model.SearchString found</p>
        }
        else
        {
            var counter = 0;
            <h3>Searching for: '@Model.SearchString'</h3>
            <hr />

            foreach (var book in Model.Books)
            {
                //@Model.BookAuthor.BookId = book.BookId;
                <br/>
                <p>Book: <a asp-action="ViewBookPage" asp-route-id="@book.BookId">@book.Title</a></p>
                @if (book.Authors.First() != null)
                {
                    <p>Author: @(String.Join(", ", @book.Authors.Select(author => author.FullName)))</p>                
                }
                else
                {
                    <p>Author: No authors added</p>
                }
                <p>Published: @(book.PublicationYear == 0 ? "Unknown" : book.PublicationYear)</p>
                <hr />
            }
        }
    }
</div>