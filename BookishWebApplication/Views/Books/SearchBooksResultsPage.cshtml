@model BookishWebApplication.Models.View.SearchBooksViewModel

@{
    ViewData["Title"] = "Search";
}

<div class="text-center">
    <form class="input-group mb-3" action="search">
        <input name="searchString" id="searchString" type="text" class="form-control" placeholder="Enter book title to search" aria-label="Enter book title to search" aria-describedby="basic-addon2">
        <div class="input-group-append">
            <input class="btn btn-outline-secondary" type="submit" value="Search"/>
        </div>
    </form>
    
    <h1 class="display-4">Book Search</h1>
    
    @{
        if (string.IsNullOrEmpty(Model.SearchString))
        {
            <p>@Model.SearchString</p>
            <p>Please search for a book</p>
        }
        else if (!Model.Books.Any())
        {
            <p>No books with title @Model.SearchString found</p>
        }
        else
        {
            var counter = 0;
            <p>Searching for: @Model.SearchString</p>

            foreach (var book in Model.Books)
            {
                //@Model.BookAuthor.BookId = book.BookId;
                <br/>
                <p>Book: @book.Title</p>
                <p>Author: @(String.Join(", ", book.Authors.Select(author => $"{author.FirstName} {author.LastName}")))</p>

                <p>Published: @(book.PublicationYear == 0 ? "Unknown" : book.PublicationYear)</p>
                <br/>

                @using (Html.BeginForm("AddAuthorToBook", "Books", FormMethod.Post))
                {
                    @Html.DropDownListFor(m => m.BookAuthors.ElementAt(counter).AuthorId,
                        new SelectList(
                            Model.AllAuthors, "AuthorId", "FullName"
                            )
                        )
                    @Html.HiddenFor(m => m.BookAuthors.ElementAt(counter).BookId)
                    <input type="submit" value="Submit"/>
                }
                counter++;
            }
        }
    }
</div>